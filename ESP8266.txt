#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <FirebaseESP8266.h>

#define FIREBASE_HOST "--"//use your own firebase host
#define FIREBASE_AUTH "--"//use your own key
const char* ssid = "--";//ssid of the wifi
const char* password = "--";//password of the wifi
const int udpPort = 12345;  // Use the same port number as in the OpenMV code

const int onlineTimeout = 30000; // Timeout duration in milliseconds (e.g., 30 seconds)

WiFiUDP udp;
FirebaseData firebaseData;
unsigned long lastPacketTime = 0; // Variable to store the time of the last received packet
bool isOnline = false; // Status flag

void setup() {
  Serial.begin(9600);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  udp.begin(udpPort);
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
}

void loop() {
  int packetSize = udp.parsePacket();
  if (packetSize) {
    // Update the last packet time when a packet is received
    lastPacketTime = millis();
    
    char packetBuffer[255]; // Adjust the buffer size based on your data
    int len = udp.read(packetBuffer, 255);
    if (len > 0) {
      packetBuffer[len] = 0;
      Serial.print("Received packet: ");
      Serial.println(packetBuffer);

      // Parse the packet and update the Firebase status here
      // (as shown in your original code)
      char* pathStart = strstr(packetBuffer, "path=");
      char* dataStart = strstr(packetBuffer, "data=");
      char* dataValue = dataStart + 5;
      if (pathStart) {
        // Find the start and end of the "path" value
        char* pathValueStart = pathStart + 5; // Skip "path="
        
        char* pathValueEnd = strchr(pathValueStart, '&'); // Find the first '&'

        // Check if '&' was found or if it's the end of the string
        if (pathValueEnd) {
          // Calculate the length of the "path" value
          int pathLength = pathValueEnd - pathValueStart;
          
          // Create a buffer to store the extracted "path" value
          char pathValue[32]; // Adjust the buffer size as needed

          // Copy the "path" value to the buffer
          strncpy(pathValue, pathValueStart, pathLength);
          pathValue[pathLength] = '\0'; // Null-terminate the string

          if (Firebase.ready()) {
            Serial.println("Firebase connection successful!");

            // Construct the Firebase database path using the "path" value
            String firebasePath = "/camera/CAM1126/" + String(pathValue);

            // Write the "data" to the database using the constructed path
            if (Firebase.setString(firebaseData, firebasePath.c_str(), dataValue)) {
              Serial.println("Data written to database: ");
            } else {
              Serial.println("Error writing to database");
            }

            // Wait for a few seconds before reading and writing again
          } else {
            Serial.println("Firebase connection failed...");
          }
        }
      }
    }
  }

  // Calculate the time since the last packet was received
  unsigned long timeSinceLastPacket = millis() - lastPacketTime;

  // Check if the time since the last packet exceeds the online timeout
  if (timeSinceLastPacket > onlineTimeout) {
    if (isOnline) {
      // Update the status to "Offline" in Firebase if it was previously "Online"
      if (Firebase.ready()) {
        String firebasePath = "/camera/CAM1126/status";
        if (Firebase.setString(firebaseData, firebasePath.c_str(), "Offline")) {
          Serial.println("Status set to Offline in database");
          isOnline = false;
        } else {
          Serial.println("Error setting status to Offline in database");
        }
      }
    }
  } else {
    if (!isOnline) {
      // Update the status to "Online" in Firebase if it was previously "Offline"
      if (Firebase.ready()) {
        String firebasePath = "/camera/CAM1126/status";
        if (Firebase.setString(firebaseData, firebasePath.c_str(), "Online")) {
          Serial.println("Status set to Online in database");
          isOnline = true;
        } else {
          Serial.println("Error setting status to Online in database");
        }
      }
    }
  }
}